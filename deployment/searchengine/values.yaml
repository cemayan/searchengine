# Default values for searchengine.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.




readApi:
  name: "readapi"
  version: v1
  image:
    repository: cemayan/readapi
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1"
  args: ["--config","/etc/config/readapi.yaml"]
  imagePullSecrets: [ ]
  nameOverride: "readapi"
  fullnameOverride: ""
  replicaCount: 1
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: { }
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: { }
  podLabels: { }

  envs:
    - name: "SEARCHENGINE_ENV"
      value: "prod"

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  service:
    type: ClusterIP
    port: 8087
    targetPort: 8087

  ingress:
    enabled: true
    className: ""
    annotations: { }
    kubernetes.io/ingress.class: nginx
    #kubernetes.io/tls-acme: "true"
    hosts:
      - host: readapi.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: [ ]
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: { }
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  livenessProbe:
    httpGet:
      path: /v1/health
      port: 8087
  readinessProbe:
    httpGet:
      path:  /v1/health
      port: 8087

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes:
    - name: config-volume
      configMap:
        name: searchengine-readapi

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: config-volume
      mountPath: /etc/config

  yamlConfig:
    readapi.yaml: |-
      version: 1
      environment: prod
      serve:
        port: 8087
      web:
        allowedOrigins:
          - "*"
      db:
        selectedDb:
          read: redis
        cache:
          name: "redis"
          addr: "redis-stack-server-master:6379"
          pass: "weak"
        persistent:
          name: "mongodb"
          uri: "mongodb://mongodb:27017"

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }
app:
  name: "app"
  version: v1
  image:
    repository: cemayan/app
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1"
  imagePullSecrets: [ ]
  nameOverride: "app"
  fullnameOverride: ""
  replicaCount: 1
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: { }
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: { }
  podLabels: { }
  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
    # capabilities:
    #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80
    targetPort: 80

  ingress:
    enabled: true
    className: ""
    annotations: { }
    kubernetes.io/ingress.class: nginx
    #kubernetes.io/tls-acme: "true"
    hosts:
      - host: app.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: [ ]
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: { }
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  livenessProbe:
    httpGet:
      path: /
      port: 80
  readinessProbe:
    httpGet:
      path: /
      port: 80

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: [ ]
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: [ ]
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }